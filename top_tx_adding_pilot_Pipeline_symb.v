// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module top_tx_adding_pilot_Pipeline_symb (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        temp1_re_dout,
        temp1_re_empty_n,
        temp1_re_read,
        temp1_im_dout,
        temp1_im_empty_n,
        temp1_im_read,
        symb1_M_real_address0,
        symb1_M_real_ce0,
        symb1_M_real_we0,
        symb1_M_real_d0,
        symb1_M_imag_address0,
        symb1_M_imag_ce0,
        symb1_M_imag_we0,
        symb1_M_imag_d0,
        symb2_M_real_address0,
        symb2_M_real_ce0,
        symb2_M_real_we0,
        symb2_M_real_d0,
        symb2_M_imag_address0,
        symb2_M_imag_ce0,
        symb2_M_imag_we0,
        symb2_M_imag_d0,
        symb3_M_real_address0,
        symb3_M_real_ce0,
        symb3_M_real_we0,
        symb3_M_real_d0,
        symb3_M_imag_address0,
        symb3_M_imag_ce0,
        symb3_M_imag_we0,
        symb3_M_imag_d0,
        symb4_M_real_address0,
        symb4_M_real_ce0,
        symb4_M_real_we0,
        symb4_M_real_d0,
        symb4_M_imag_address0,
        symb4_M_imag_ce0,
        symb4_M_imag_we0,
        symb4_M_imag_d0,
        symb5_M_real_address0,
        symb5_M_real_ce0,
        symb5_M_real_we0,
        symb5_M_real_d0,
        symb5_M_imag_address0,
        symb5_M_imag_ce0,
        symb5_M_imag_we0,
        symb5_M_imag_d0,
        symb6_M_real_address0,
        symb6_M_real_ce0,
        symb6_M_real_we0,
        symb6_M_real_d0,
        symb6_M_imag_address0,
        symb6_M_imag_ce0,
        symb6_M_imag_we0,
        symb6_M_imag_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] temp1_re_dout;
input   temp1_re_empty_n;
output   temp1_re_read;
input  [15:0] temp1_im_dout;
input   temp1_im_empty_n;
output   temp1_im_read;
output  [9:0] symb1_M_real_address0;
output   symb1_M_real_ce0;
output   symb1_M_real_we0;
output  [15:0] symb1_M_real_d0;
output  [9:0] symb1_M_imag_address0;
output   symb1_M_imag_ce0;
output   symb1_M_imag_we0;
output  [15:0] symb1_M_imag_d0;
output  [9:0] symb2_M_real_address0;
output   symb2_M_real_ce0;
output   symb2_M_real_we0;
output  [15:0] symb2_M_real_d0;
output  [9:0] symb2_M_imag_address0;
output   symb2_M_imag_ce0;
output   symb2_M_imag_we0;
output  [15:0] symb2_M_imag_d0;
output  [9:0] symb3_M_real_address0;
output   symb3_M_real_ce0;
output   symb3_M_real_we0;
output  [15:0] symb3_M_real_d0;
output  [9:0] symb3_M_imag_address0;
output   symb3_M_imag_ce0;
output   symb3_M_imag_we0;
output  [15:0] symb3_M_imag_d0;
output  [9:0] symb4_M_real_address0;
output   symb4_M_real_ce0;
output   symb4_M_real_we0;
output  [15:0] symb4_M_real_d0;
output  [9:0] symb4_M_imag_address0;
output   symb4_M_imag_ce0;
output   symb4_M_imag_we0;
output  [15:0] symb4_M_imag_d0;
output  [9:0] symb5_M_real_address0;
output   symb5_M_real_ce0;
output   symb5_M_real_we0;
output  [15:0] symb5_M_real_d0;
output  [9:0] symb5_M_imag_address0;
output   symb5_M_imag_ce0;
output   symb5_M_imag_we0;
output  [15:0] symb5_M_imag_d0;
output  [9:0] symb6_M_real_address0;
output   symb6_M_real_ce0;
output   symb6_M_real_we0;
output  [15:0] symb6_M_real_d0;
output  [9:0] symb6_M_imag_address0;
output   symb6_M_imag_ce0;
output   symb6_M_imag_we0;
output  [15:0] symb6_M_imag_d0;

reg ap_idle;
reg temp1_re_read;
reg temp1_im_read;
reg symb1_M_real_ce0;
reg symb1_M_real_we0;
reg symb1_M_imag_ce0;
reg symb1_M_imag_we0;
reg symb2_M_real_ce0;
reg symb2_M_real_we0;
reg symb2_M_imag_ce0;
reg symb2_M_imag_we0;
reg symb3_M_real_ce0;
reg symb3_M_real_we0;
reg symb3_M_imag_ce0;
reg symb3_M_imag_we0;
reg symb4_M_real_ce0;
reg symb4_M_real_we0;
reg symb4_M_imag_ce0;
reg symb4_M_imag_we0;
reg symb5_M_real_ce0;
reg symb5_M_real_we0;
reg symb5_M_imag_ce0;
reg symb5_M_imag_we0;
reg symb6_M_real_ce0;
reg symb6_M_real_we0;
reg symb6_M_imag_ce0;
reg symb6_M_imag_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln91_reg_405;
reg   [0:0] icmp_ln95_reg_409;
reg   [0:0] icmp_ln99_reg_413;
reg   [0:0] icmp_ln103_reg_417;
reg    ap_predicate_op34_read_state2;
reg    ap_predicate_op35_read_state2;
reg    ap_predicate_op51_read_state2;
reg    ap_predicate_op52_read_state2;
reg    ap_predicate_op60_read_state2;
reg    ap_predicate_op61_read_state2;
reg    ap_predicate_op69_read_state2;
reg    ap_predicate_op70_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln87_fu_274_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    temp1_re_blk_n;
wire    ap_block_pp0_stage0;
reg    temp1_im_blk_n;
reg   [11:0] i_9_reg_395;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln91_fu_286_p2;
wire   [0:0] icmp_ln95_fu_292_p2;
wire   [0:0] icmp_ln99_fu_298_p2;
wire   [0:0] icmp_ln103_fu_304_p2;
wire   [63:0] zext_ln113_fu_334_p1;
wire   [0:0] icmp_ln107_fu_323_p2;
wire   [63:0] zext_ln109_fu_346_p1;
wire   [63:0] zext_ln105_fu_358_p1;
wire   [63:0] zext_ln101_fu_370_p1;
wire   [63:0] zext_ln97_fu_382_p1;
wire   [63:0] i_10_cast11_fu_315_p1;
reg   [11:0] i_fu_82;
wire   [11:0] add_ln87_fu_280_p2;
wire    ap_loop_init;
reg   [11:0] ap_sig_allocacmp_i_9;
wire   [9:0] empty_fu_320_p1;
wire   [9:0] add_ln113_fu_328_p2;
wire   [9:0] add_ln109_fu_340_p2;
wire   [9:0] add_ln105_fu_352_p2;
wire   [9:0] add_ln101_fu_364_p2;
wire   [9:0] add_ln97_fu_376_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

top_tx_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln87_fu_274_p2 == 1'd0))) begin
            i_fu_82 <= add_ln87_fu_280_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_82 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_9_reg_395 <= ap_sig_allocacmp_i_9;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln99_fu_298_p2 == 1'd0) & (icmp_ln95_fu_292_p2 == 1'd0) & (icmp_ln91_fu_286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln87_fu_274_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln103_reg_417 <= icmp_ln103_fu_304_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln87_fu_274_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln91_reg_405 <= icmp_ln91_fu_286_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_fu_286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln87_fu_274_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln95_reg_409 <= icmp_ln95_fu_292_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln95_fu_292_p2 == 1'd0) & (icmp_ln91_fu_286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln87_fu_274_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln99_reg_413 <= icmp_ln99_fu_298_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln87_fu_274_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_9 = 12'd0;
    end else begin
        ap_sig_allocacmp_i_9 = i_fu_82;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symb1_M_imag_ce0 = 1'b1;
    end else begin
        symb1_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln91_reg_405 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symb1_M_imag_we0 = 1'b1;
    end else begin
        symb1_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symb1_M_real_ce0 = 1'b1;
    end else begin
        symb1_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln91_reg_405 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symb1_M_real_we0 = 1'b1;
    end else begin
        symb1_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symb2_M_imag_ce0 = 1'b1;
    end else begin
        symb2_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln95_reg_409 == 1'd1) & (icmp_ln91_reg_405 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symb2_M_imag_we0 = 1'b1;
    end else begin
        symb2_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symb2_M_real_ce0 = 1'b1;
    end else begin
        symb2_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln95_reg_409 == 1'd1) & (icmp_ln91_reg_405 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symb2_M_real_we0 = 1'b1;
    end else begin
        symb2_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symb3_M_imag_ce0 = 1'b1;
    end else begin
        symb3_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln99_reg_413 == 1'd1) & (icmp_ln95_reg_409 == 1'd0) & (icmp_ln91_reg_405 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symb3_M_imag_we0 = 1'b1;
    end else begin
        symb3_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symb3_M_real_ce0 = 1'b1;
    end else begin
        symb3_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln99_reg_413 == 1'd1) & (icmp_ln95_reg_409 == 1'd0) & (icmp_ln91_reg_405 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symb3_M_real_we0 = 1'b1;
    end else begin
        symb3_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symb4_M_imag_ce0 = 1'b1;
    end else begin
        symb4_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln103_reg_417 == 1'd1) & (icmp_ln99_reg_413 == 1'd0) & (icmp_ln95_reg_409 == 1'd0) & (icmp_ln91_reg_405 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symb4_M_imag_we0 = 1'b1;
    end else begin
        symb4_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symb4_M_real_ce0 = 1'b1;
    end else begin
        symb4_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln103_reg_417 == 1'd1) & (icmp_ln99_reg_413 == 1'd0) & (icmp_ln95_reg_409 == 1'd0) & (icmp_ln91_reg_405 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symb4_M_real_we0 = 1'b1;
    end else begin
        symb4_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symb5_M_imag_ce0 = 1'b1;
    end else begin
        symb5_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln103_reg_417 == 1'd0) & (icmp_ln99_reg_413 == 1'd0) & (icmp_ln95_reg_409 == 1'd0) & (icmp_ln91_reg_405 == 1'd0) & (icmp_ln107_fu_323_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symb5_M_imag_we0 = 1'b1;
    end else begin
        symb5_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symb5_M_real_ce0 = 1'b1;
    end else begin
        symb5_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln103_reg_417 == 1'd0) & (icmp_ln99_reg_413 == 1'd0) & (icmp_ln95_reg_409 == 1'd0) & (icmp_ln91_reg_405 == 1'd0) & (icmp_ln107_fu_323_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symb5_M_real_we0 = 1'b1;
    end else begin
        symb5_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symb6_M_imag_ce0 = 1'b1;
    end else begin
        symb6_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln103_reg_417 == 1'd0) & (icmp_ln99_reg_413 == 1'd0) & (icmp_ln95_reg_409 == 1'd0) & (icmp_ln91_reg_405 == 1'd0) & (icmp_ln107_fu_323_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symb6_M_imag_we0 = 1'b1;
    end else begin
        symb6_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symb6_M_real_ce0 = 1'b1;
    end else begin
        symb6_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln103_reg_417 == 1'd0) & (icmp_ln99_reg_413 == 1'd0) & (icmp_ln95_reg_409 == 1'd0) & (icmp_ln91_reg_405 == 1'd0) & (icmp_ln107_fu_323_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symb6_M_real_we0 = 1'b1;
    end else begin
        symb6_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln91_reg_405 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_predicate_op70_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_predicate_op61_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_predicate_op52_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_predicate_op35_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        temp1_im_blk_n = temp1_im_empty_n;
    end else begin
        temp1_im_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln91_reg_405 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op70_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op61_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op52_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op35_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        temp1_im_read = 1'b1;
    end else begin
        temp1_im_read = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln91_reg_405 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_predicate_op69_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_predicate_op60_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_predicate_op51_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_predicate_op34_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        temp1_re_blk_n = temp1_re_empty_n;
    end else begin
        temp1_re_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln91_reg_405 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op69_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op60_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op51_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op34_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        temp1_re_read = 1'b1;
    end else begin
        temp1_re_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln101_fu_364_p2 = ($signed(empty_fu_320_p1) + $signed(10'd848));

assign add_ln105_fu_352_p2 = (empty_fu_320_p1 + 10'd248);

assign add_ln109_fu_340_p2 = ($signed(empty_fu_320_p1) + $signed(10'd672));

assign add_ln113_fu_328_p2 = (empty_fu_320_p1 + 10'd72);

assign add_ln87_fu_280_p2 = (ap_sig_allocacmp_i_9 + 12'd1);

assign add_ln97_fu_376_p2 = (empty_fu_320_p1 + 10'd424);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln91_reg_405 == 1'd1) & (temp1_re_empty_n == 1'b0)) | ((ap_predicate_op70_read_state2 == 1'b1) & (temp1_im_empty_n == 1'b0)) | ((ap_predicate_op69_read_state2 == 1'b1) & (temp1_re_empty_n == 1'b0)) | ((ap_predicate_op61_read_state2 == 1'b1) & (temp1_im_empty_n == 1'b0)) | ((ap_predicate_op60_read_state2 == 1'b1) & (temp1_re_empty_n == 1'b0)) | ((ap_predicate_op52_read_state2 == 1'b1) & (temp1_im_empty_n == 1'b0)) | ((ap_predicate_op51_read_state2 == 1'b1) & (temp1_re_empty_n == 1'b0)) | ((ap_predicate_op35_read_state2 == 1'b1) & (temp1_im_empty_n == 1'b0)) | ((temp1_im_empty_n == 1'b0) & (icmp_ln91_reg_405 == 1'd1)) | ((ap_predicate_op34_read_state2 == 1'b1) & (temp1_re_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln91_reg_405 == 1'd1) & (temp1_re_empty_n == 1'b0)) | ((ap_predicate_op70_read_state2 == 1'b1) & (temp1_im_empty_n == 1'b0)) | ((ap_predicate_op69_read_state2 == 1'b1) & (temp1_re_empty_n == 1'b0)) | ((ap_predicate_op61_read_state2 == 1'b1) & (temp1_im_empty_n == 1'b0)) | ((ap_predicate_op60_read_state2 == 1'b1) & (temp1_re_empty_n == 1'b0)) | ((ap_predicate_op52_read_state2 == 1'b1) & (temp1_im_empty_n == 1'b0)) | ((ap_predicate_op51_read_state2 == 1'b1) & (temp1_re_empty_n == 1'b0)) | ((ap_predicate_op35_read_state2 == 1'b1) & (temp1_im_empty_n == 1'b0)) | ((temp1_im_empty_n == 1'b0) & (icmp_ln91_reg_405 == 1'd1)) | ((ap_predicate_op34_read_state2 == 1'b1) & (temp1_re_empty_n == 1'b0))));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((icmp_ln91_reg_405 == 1'd1) & (temp1_re_empty_n == 1'b0)) | ((ap_predicate_op70_read_state2 == 1'b1) & (temp1_im_empty_n == 1'b0)) | ((ap_predicate_op69_read_state2 == 1'b1) & (temp1_re_empty_n == 1'b0)) | ((ap_predicate_op61_read_state2 == 1'b1) & (temp1_im_empty_n == 1'b0)) | ((ap_predicate_op60_read_state2 == 1'b1) & (temp1_re_empty_n == 1'b0)) | ((ap_predicate_op52_read_state2 == 1'b1) & (temp1_im_empty_n == 1'b0)) | ((ap_predicate_op51_read_state2 == 1'b1) & (temp1_re_empty_n == 1'b0)) | ((ap_predicate_op35_read_state2 == 1'b1) & (temp1_im_empty_n == 1'b0)) | ((temp1_im_empty_n == 1'b0) & (icmp_ln91_reg_405 == 1'd1)) | ((ap_predicate_op34_read_state2 == 1'b1) & (temp1_re_empty_n == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op34_read_state2 = ((icmp_ln103_reg_417 == 1'd0) & (icmp_ln99_reg_413 == 1'd0) & (icmp_ln95_reg_409 == 1'd0) & (icmp_ln91_reg_405 == 1'd0));
end

always @ (*) begin
    ap_predicate_op35_read_state2 = ((icmp_ln103_reg_417 == 1'd0) & (icmp_ln99_reg_413 == 1'd0) & (icmp_ln95_reg_409 == 1'd0) & (icmp_ln91_reg_405 == 1'd0));
end

always @ (*) begin
    ap_predicate_op51_read_state2 = ((icmp_ln103_reg_417 == 1'd1) & (icmp_ln99_reg_413 == 1'd0) & (icmp_ln95_reg_409 == 1'd0) & (icmp_ln91_reg_405 == 1'd0));
end

always @ (*) begin
    ap_predicate_op52_read_state2 = ((icmp_ln103_reg_417 == 1'd1) & (icmp_ln99_reg_413 == 1'd0) & (icmp_ln95_reg_409 == 1'd0) & (icmp_ln91_reg_405 == 1'd0));
end

always @ (*) begin
    ap_predicate_op60_read_state2 = ((icmp_ln99_reg_413 == 1'd1) & (icmp_ln95_reg_409 == 1'd0) & (icmp_ln91_reg_405 == 1'd0));
end

always @ (*) begin
    ap_predicate_op61_read_state2 = ((icmp_ln99_reg_413 == 1'd1) & (icmp_ln95_reg_409 == 1'd0) & (icmp_ln91_reg_405 == 1'd0));
end

always @ (*) begin
    ap_predicate_op69_read_state2 = ((icmp_ln95_reg_409 == 1'd1) & (icmp_ln91_reg_405 == 1'd0));
end

always @ (*) begin
    ap_predicate_op70_read_state2 = ((icmp_ln95_reg_409 == 1'd1) & (icmp_ln91_reg_405 == 1'd0));
end

assign empty_fu_320_p1 = i_9_reg_395[9:0];

assign i_10_cast11_fu_315_p1 = i_9_reg_395;

assign icmp_ln103_fu_304_p2 = ((ap_sig_allocacmp_i_9 < 12'd2400) ? 1'b1 : 1'b0);

assign icmp_ln107_fu_323_p2 = ((i_9_reg_395 < 12'd3000) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_274_p2 = ((ap_sig_allocacmp_i_9 == 12'd3600) ? 1'b1 : 1'b0);

assign icmp_ln91_fu_286_p2 = ((ap_sig_allocacmp_i_9 < 12'd600) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_292_p2 = ((ap_sig_allocacmp_i_9 < 12'd1200) ? 1'b1 : 1'b0);

assign icmp_ln99_fu_298_p2 = ((ap_sig_allocacmp_i_9 < 12'd1800) ? 1'b1 : 1'b0);

assign symb1_M_imag_address0 = i_10_cast11_fu_315_p1;

assign symb1_M_imag_d0 = temp1_im_dout;

assign symb1_M_real_address0 = i_10_cast11_fu_315_p1;

assign symb1_M_real_d0 = temp1_re_dout;

assign symb2_M_imag_address0 = zext_ln97_fu_382_p1;

assign symb2_M_imag_d0 = temp1_im_dout;

assign symb2_M_real_address0 = zext_ln97_fu_382_p1;

assign symb2_M_real_d0 = temp1_re_dout;

assign symb3_M_imag_address0 = zext_ln101_fu_370_p1;

assign symb3_M_imag_d0 = temp1_im_dout;

assign symb3_M_real_address0 = zext_ln101_fu_370_p1;

assign symb3_M_real_d0 = temp1_re_dout;

assign symb4_M_imag_address0 = zext_ln105_fu_358_p1;

assign symb4_M_imag_d0 = temp1_im_dout;

assign symb4_M_real_address0 = zext_ln105_fu_358_p1;

assign symb4_M_real_d0 = temp1_re_dout;

assign symb5_M_imag_address0 = zext_ln109_fu_346_p1;

assign symb5_M_imag_d0 = temp1_im_dout;

assign symb5_M_real_address0 = zext_ln109_fu_346_p1;

assign symb5_M_real_d0 = temp1_re_dout;

assign symb6_M_imag_address0 = zext_ln113_fu_334_p1;

assign symb6_M_imag_d0 = temp1_im_dout;

assign symb6_M_real_address0 = zext_ln113_fu_334_p1;

assign symb6_M_real_d0 = temp1_re_dout;

assign zext_ln101_fu_370_p1 = add_ln101_fu_364_p2;

assign zext_ln105_fu_358_p1 = add_ln105_fu_352_p2;

assign zext_ln109_fu_346_p1 = add_ln109_fu_340_p2;

assign zext_ln113_fu_334_p1 = add_ln113_fu_328_p2;

assign zext_ln97_fu_382_p1 = add_ln97_fu_376_p2;

endmodule //top_tx_adding_pilot_Pipeline_symb
